* PHP with Database
* Date: Fri, 08-31
* by Mark Seaman

![](img/Bear_Logo.png)


### You Know ...
* about PHP Preprocessor
* web hosting
* create standard page template with includes
* define Forms UI
* retrieve data from POST or GET


### BACS 350 Tutor
Chris Newby 

* Thursday 11:30-2:00 
* Friday 1:30-4:00
* Kepner 0095


### Systematic Learning
* Theory/Practice
* Brick on Brick
* Hands on Application


### Today's Lesson
* Save data in database


### Schedule

* 2:30 -  5:00 Intro
* 2:35 - 10:00 Learn
* 2:45 - 15:00 Plan
* 3:00 - 15:00 Build
* 3:15 -  5:00 Share
* 3:20




## PHP Access to Database - 2:35

### Save Data in Database
* Create Database Structure
* Connect to Database
* Insert Statement


### Create Database Table - subscribers (name, email)
Create a table by executing SQL

```
CREATE TABLE subscribers (
  id int(3) NOT NULL AUTO_INCREMENT,
  name varchar(100)  NOT NULL,
  email varchar(100) NOT NULL,
  PRIMARY KEY (id)
);
```


### Connect to Database
Form a database connection string

```
$db_connect = 'mysql:host=localhost:3305;dbname=uncobacs_subscribers';

$username = 'uncobacs_350';

$password = 'xxx';
```


### Open Connection
Execute the connection string to connect to the database

```
$db = new PDO($db_connect, $username, $password);
```


### Select Statement
Query for all subscribers

```
$query = "SELECT * FROM subscribers";

$statement = $db->prepare($query);

$statement->execute();
```


### Show Subscribers
Loop over all of the subscribers to make a bullet list

```
    $subscribers = $statement->fetchAll();
    echo '<ul>';
    foreach ($subscribers as $s) {
        echo '<li>' . $s['name'] . ', ' . $s['email'] . '</li>';
    }
    echo '</ul>';
```


### Insert Statement
Add one record to the subscriber table

```
    $query = "INSERT INTO subscribers
         (name, email)
    VALUES
        (:name, :email)";
```


### Variable Bindings
Each value must be tied from a variable to the SQL statement

```
$statement = $db->prepare($query);

$statement->bindValue(':name', $name);
$statement->bindValue(':email', $email);
```


### Execute the statement
Run the SQL statement against the database

```
$statement->execute();
$statement->closeCursor();
```





## Project #6 - 3:00

### Create project/06/index.php
* Use the header and footer to bring in style
* Add a title "BACS 350 - Project #6"
* Deploy and test


### Add links to "Home Page" and "Github Account"
* Update project/06/index.php
* Deploy and test


### Find your database parameters using phpMyAdmin
* port
* dbname
* username
* password


### Form the DB Connection string
Set variables for your database

    $port = '3306';
    $dbname = 'uncobacs_subscribers';
    $db_connect = "mysql:host=localhost:$port;dbname=$dbname";
    $username = 'uncobacs_350';
    $password = 'xxx';
    
* Test on remote server
   

### Display DB Info
Echo the values

```
echo "<h1>DB Connection</h1>" .
    "<p>Connect String:  $db_connect, $username, $password</p>";
```

* Test on remote server


### Create the connection string
Create a PHP Data Object after connecting to database

```
echo 'new PDO(' . $db_connect . ', ' . $username . ', ' . $password . ')';

```

* Test on remote server



### Select Statement
Query for all subscribers

```
$query = "SELECT * FROM subscribers";

$statement = $db->prepare($query);

$statement->execute();
```

* Test on remote server


### Show Subscribers
Loop over all of the subscribers to make a bullet list

```
    $subscribers = $statement->fetchAll();
    echo '<ul>';
    foreach ($subscribers as $s) {
        echo '<li>' . $s['name'] . ', ' . $s['email'] . '</li>';
    }
    echo '</ul>';
```

* Test on remote server


### Insert Statement
Add one record to the subscriber table

```
    $query = "INSERT INTO subscribers
         (name, email)
    VALUES
        (:name, :email)";
```

* Test on remote server


### Variable Bindings
Each value must be tied from a variable to the SQL statement

```
$statement = $db->prepare($query);

$statement->bindValue(':name', $name);
$statement->bindValue(':email', $email);
```

* Test on remote server


### Execute the statement
Run the SQL statement against the database

```
$statement->execute();
$statement->closeCursor();
```

* Test on remote server


### Comment Out the Insert Statement
Do not repeat the Insert each time your page loads

* Place comment markers around your SQL execute

```
$statement->execute();
$statement->closeCursor();
```

* Test on remote server


### Submit project/06/index.php in Canvas





## Engineering Skills - 2:45
Version Control

### Git
* Created by the creator of Linux
* Best of 30 Version Control Systems
* Most Popular choice for tools

### Atlassian
* Git repos using Source Tree Client
* Bitbucket is a website for managing git repos
* Jira - Project management tools

### Github
* Website for managing git repos
* Combines other project management tools
* Easy to set up and start using
* Room to grow

### Sign up for Github Account
* Sign up for a Free Account
* Create public repos that others can see
* Recommend using real name (mine is Mark-Seaman)


### Reading:
* Chapter 4 pages 126-146
* How to use PHP with a MySQL database

![](img/Bear3.png)
