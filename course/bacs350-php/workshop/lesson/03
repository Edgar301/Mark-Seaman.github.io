* Development Workflow
* Date: Fri, 08-24
* by Mark Seaman

![](img/Bear_Logo.png)


### Review

PHP is Extended HTML

Dynamic page content

Server-side includes

Reusable page structure


### Today's Lesson

Workflow: Edit, Test, Deploy

Understanding Preprocessor

PHP Concepts Quiz


### Learning Process
* Lots of assignments
    * Small steps is easier for students
    * Constant Measure of progress allows adjustments
* 2 exercises, 1 project, quiz


### Schedule

2:30 -  5:00 Intro
2:35 - 10:00 Learn
2:45 - 15:00 Plan
3:00 - 15:00 Build
3:15 -  5:00 Share
3:20



## Learn - 2:35
Development Workflow


### Workflow: Edit, Test, Deploy
* Build your source code
* Test it locally (if possible)
* Send your files to server
* Test it remotely


### Edit
* Use OneDrive to manage your code
* Enable file extensions
* Setup shortcuts to edit source code
* Work on one thing at a time


### Test
* Use Google Chrome
* Setup shortcuts to test code


### Deploy
* Send files to server
* Replace remote files regularly
* Use FileZilla to manage files


### Test
* Create a test page (test.php)
* Link to each file
* 10 seconds to test everything
* Later we will automate this





## Build - 3:00
PHP to HTML

### Create project/03/index.php
* Add test links for experimentation

```html
<h2>Test Links</h2>
    <ul>
        <li><a href="https://unco-bacs.org/bacs_350/index.php">Class demo server</a></li>
        <li><a href="https://seamansguide.com/guide/PhpApps/Index">Class web server</a></li>
        <li><a href="/index.php">My server</a></li>
        <li><a href="../01">Project #1</a></li>
        <li><a href="../02">Project #2</a></li>
        <li><a href="index.php">Project #3 - index.php</a></li>
        <li><a href=".">Project #3 - directory</a></li>
        <li><a href="page.php">Project #3 - page.php</a></li>
        <li><a href="Bear3.png">Project #3 - Bear Logo</a></li>
        <li><a href="styles.css">Project #3 - styles.css</a></li>
    </ul>
```


### Download an image to use
Save and upload to your web site

![](img/Bear3.png)


### Let's play with the server
* Send file to server
* Go through all the links
* What happens with missing files?


### URL that points to directory
Look at what happens when ...

* HTML file exists
* PHP file exists
* Both exist


### Convert index.php to require header.php
* Try bad file name
* View error_log


### Add an echo statement
* Use echo in index.php

```php
<h1>Variables</h1>
<p>
    My Name is
    <?php echo "Inigo Montoya"; ?>
<p>
```

### Test the code

### Use a variable

```php
<?php $first = "Abraham"; $last = "Lincoln" ?>
<p>
    My Name is
    <?php echo $first . $last; ?>
<p>
```



### Modify header.php
* Set the page title in header.php

```php
<title>
    <?php echo $page_title; ?>
</title>

<h1>
    <?php echo $page_title; ?>
</h1>
```


### Modify index.php
* Use the new header
* Set the page title

```php
<?php

    $page_title = "Project #3";
    include "header.php";
    echo "<h1>" . $page_title . "</h2>";
    echo "<p>Help me ... I'm trapped inside this computer.</p>";
    include "footer.php";

?>
```


### Finish out a complete page
Files you should have in "project/03" when done

* index.php
* Bear.png
* footer.php
* header.php
* index.php
* styles.css





## Plan - 2:45
Server Processing of Requests


### PHP uses a preprocessor

![](img/appserver.png)


### Understand the Preprocessor
* PHP is converted to HTML by the server
* Server-side scripting
* Only the HTML is sent in the HTTP Response


### Handle HTTP Requests
* Requests contain a URL
* If no page is found the the "index.php" is returned


###  Includes
* include - Text is inserted if it exists
* include_once - Text is inserted only once

Example

    include "file.php";
    include_once "file.php";


### Require
* require - Text is inserted or die
* require_once - Text is inserted only once

Example

    require "file.php";
    require_once "file.php";


### error_log

* Created when program dies


### Variables
* Variables can be set in PHP
* Later they can be used
* String concatonation is done with '.'
* Echo statement writes to the output

Example

    $name = "Inigo Montoya";
    echo "My Name is " . $name;


### PHP can Output HTML
* Converted on server

```html
    <h1>
        <?php echo "My Name is " . $name; ?>
    </h1>
```

### Modify header.php
* Make the page title a variable

```html
    <title>
        <?php echo $page_title; ?>
    </title>

    <h1>
        <?php echo $page_title; ?>
    </h1>
```

### Set the Page Title
* Set the variable that defines the title

```
    $page_title = "Project #3"

    include "header.php"

    echo "<p> This page is about " . $page_title . "</p>"
```



## Share - 3:15
Reading, Exercise, Quiz


### See you next time
* Read Chapter 2 - How to Code a PHP App (Pages 68-88)
* Finalize project 3
* Submit your URL in Canvas

### Quiz
* Go to the Canvas and do the Quiz

![](img/Bear3.png)
