# Lesson 8
* Subscriber App
* Wednesday, 09-07
* Mark Seaman

![](img/Bear_Logo.png)


### Today - Live Coding Demo

* Build the subscriber app
* You watch while I do / You repeat the steps
* I need your entire brain engaged
* Monitors off for the next 20 minutes


## Requirements

### Project Description
Build an application that manages a list of subscribers.

### User Views:

* subscribers - shows a list with add button
* add - shows a form with name and email fields

### Iterative Development

* One feature at a time
* Limited scope (no bugs)
* Test as you go



## Build
* Create the subscriber app
* Build in steps around each Project Feature

### Clone Local repository

* Use Github Desktop to clone your BACS_350 repo
* File, Clone repository...

### Pull fresh code

* Using the Github Desktop sync code from Mark-Seaman BACS 350 repo
* Confirm code by looking for project/08
* Use Github Desktop to pull code to local computer
* Confirm you have project/08 on your local computer

### Setup Workflow

* Github Desktop (connect to BACS 350)
* FileZilla (connect to Bluehost)
* Windows Explorer (desktop shortcut)
* Chrome (local and remote bookmarks)
* Brackets (source code)

### Fix up todo.php

* Deploy project/08/todo.php
* Test with web browser
* A starter file is in project/08/todo.php
* Add the extra files that are needed to make the stylesheet work properly
* Deploy and test

### Commit all changes

* Use Github Desktop to commit your changes
* Push to your remote repo

### Stylish page

* Use the index.php page template to create project/08/index.php
* User the header and footer templates to create a better page
* Deploy and test
* Add stylesheet and image files (see what happens)

### Validate HTML

* Use the HTML validator to make sure that we have good HTML
* Bookmark for later

### Connect to Database

* Use db.php template to create a database connection
* Place code directly into index.php
* Deploy & test & validate

### Refactor Connection

* Move DB connection into db.php
* Deploy & test & validate

### Show subscribers

* Use select.php template to list the subscribers
* Deploy & test & validate
* Refactor into select.php
* Deploy & test & validate

### Create add view

* Use insert.php template to create add.php
* Add link to add.php on index.php
* Deploy & test & validate

### Build form for input

* Use add_form.php template to create add_form.php
* Set action to add.php
* Link to add_form.php from index.php
* Deploy & test & validate

### Extract data from POST

* Modify add.php to use input from POST operation
* Deploy & test & validate

### Automatically show subscribers

* When add is successful go the index.php page
* Deploy & test & validate

### Commit all changes

* Use Github Desktop to commit your changes
* Push to your remote repo

### Submit your URL in Canvas

* Post project/08/index.php

![](img/Bear3.png)
